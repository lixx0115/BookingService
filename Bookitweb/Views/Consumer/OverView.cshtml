
@model Booking.Consumer
@{

    ViewBag.Title = "Consumer Overview";
}
@{ 
    if(Model.myBookedSlotList == null)
    {
        Model.myBookedSlotList = new List<Booking.BookedSlot>();

    }
    if(Model.MyBookableList == null)
    {
        Model.MyBookableList = new List<Guid>();
    }
} 

@section scripts { 
    
<script>
$(document).ready(function() {
    $('#calendar').fullCalendar({
        theme: true,
        header: {
            left: '',
            center: '',
            right: ''
        },
        defaultView: 'agendaDay',
        editable: true,
        events: "/Consumer/GetEvents/",
        selectable: true,
        selectHelper: true,
        eventClick: function (calEvent, jsEvent, view) {

            //  alert('Event: ' + calEvent.title + ' Start: ' + calEvent.start);
            $('#cancelText').text( 'Cancel ' + 'Event: ' + calEvent.title + ' Start: ' + calEvent.start + '?');
            $('#cancelModal').modal("show");

            // change the border color just for fun
            $(this).css('border-color', 'red');

        },
        select: function(start, end) {
        var title = prompt('Event Title:');
        prompt(start);
        var eventData;
        if (title) {
            eventData = {
                title: title,
                start: start,
                end: end
            };
            $.post("/Consumer/BookEvent/", { eventStart: eventData.start.utc().format(), eventEnd: eventData.end.utc().format(), name: eventData.title }, function (data) {
                $(".result").html(data);
            });
            $('#calendar').fullCalendar('renderEvent', eventData, true);
  
        }
        $('#calendar').fullCalendar('unselect');
    },
    editable: true,
    eventLimit: true
    });

  

    $('#datepicker').datepicker({
        inline: true,
        onSelect: function (dateText, inst) {
            var d = new Date(dateText);
            $('#calendar').fullCalendar('gotoDate', d);
        }
    });

});
</script>
    }
<h2>Consumer Overview</h2>
<div>
    <div class="formRowContainer">
        <div class="labelContainer ">
            @Html.LabelFor(model => model.Contact.Name)
        </div>
        <div class="valueContainer">
            @Html.TextBoxFor(model => model.Contact.Name, Model.Contact.Name)
        </div> 
    </div>
    <div class="container, row">
        <hr>
        <div id="datepicker" class="col-md-4"></div>
        <div id="calendar" class="col-md-8"></div>
    </div>
</div>

<div id="cancelModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
             
            </div>
            <div class="modal-body">
                <p id="cancelText">Want to canel?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal">Yes, Cancel it</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->